services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Mktcode\ContaoPwaBundle\:
        resource: '../../*'
        exclude: '../../{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    Mktcode\ContaoPwaBundle\Controller\:
        resource: '../../Controller'
        tags: ['controller.service_arguments']

    Mktcode\Contao\PwaBundle\EventListener\NavigationListener:
        tags:
            - { name: contao.hook, hook: getUserNavigation }

    _instanceof:
        Contao\CoreBundle\Framework\FrameworkAwareInterface:
            calls:
            - ["setFramework", ["@contao.framework"]]

        Symfony\Component\DependencyInjection\ContainerAwareInterface:
            calls:
            - ["setContainer", ["@service_container"]]
